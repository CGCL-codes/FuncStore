/**
 * Autogenerated by Thrift Compiler (0.18.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "inode_management_service_types.h"

#include <algorithm>
#include <ostream>

#include <thrift/TToString.h>

namespace hive { namespace metadata {


rpc_inode::~rpc_inode() noexcept {
}


void rpc_inode::__set_name(const std::string& val) {
  this->name = val;
}

void rpc_inode::__set_slices(const std::vector<std::string> & val) {
  this->slices = val;
}

void rpc_inode::__set_lifetime(const int64_t val) {
  this->lifetime = val;
}
std::ostream& operator<<(std::ostream& out, const rpc_inode& obj)
{
  obj.printTo(out);
  return out;
}


void swap(rpc_inode &a, rpc_inode &b) {
  using ::std::swap;
  swap(a.name, b.name);
  swap(a.slices, b.slices);
  swap(a.lifetime, b.lifetime);
}

rpc_inode::rpc_inode(const rpc_inode& other6) {
  name = other6.name;
  slices = other6.slices;
  lifetime = other6.lifetime;
}
rpc_inode& rpc_inode::operator=(const rpc_inode& other7) {
  name = other7.name;
  slices = other7.slices;
  lifetime = other7.lifetime;
  return *this;
}
void rpc_inode::printTo(std::ostream& out) const {
  using ::apache::thrift::to_string;
  out << "rpc_inode(";
  out << "name=" << to_string(name);
  out << ", " << "slices=" << to_string(slices);
  out << ", " << "lifetime=" << to_string(lifetime);
  out << ")";
}

}} // namespace
